.TH man_1_simple_shell V. 1,0 2019
.SH NAME
simple_shell \-Simple UNIX command interpreter.
.SH SYNOPSIS
.B man_1_simple_shell
[\fB\options\fR]
[\FB\file\fR]
.B #include <sys/types.h>
.B #include <sys/stat.h>
.B #include <stdio.h>
.B #include <stdlib.h>
.B #include <unistd.h>
.B #include <fcntl.h>
.B #include <signal.h>

.B STRING MANIPULATION FUNCTIONS

\fb int string_len(char *s);
\fb int string_cmp(char *s1, char *s2);
\fb char *str_concat(char *s1, char *s2);
\fb void str_cpy(char *from, char *to);
\fb char *str_dup(char *from);
\fb char **_strtok(char *line, char *token);
\fb char *string_rem(char *s1, char *s2);

.B PRINTING FUNCTIONS

\fb void printl(line_t *list);
\fb void printargs(line_t **args);

.B ENVIRONMENT PROCESS FUNCTIONS

\fb char *_getenv(char *var, line_t **envp, char **str);
\fb int _setenv(char *var, line_t **envp, char *value);
\fb line_t *get_env_list(char **envp);
\fb char **get_env_array(line_t **envp);
\fb void free_env(line_t **envp);

.B LEXIC ANALYZER FUNCTIONS

\fb int check_paths(char **paths, char **args, line_t **envp);
\fb int write_alias(char **argv, line_t **envp);
\fb int _getchar(void);
\fb size_t _getline(char **line);
\fb void free_args(char **args);
\fb int _gethostname(char *buff, int size);
\fb void getprompt(line_t **env, char *prompt);
\fb void exit_shell(char **prompt);
\fb int prompt_loop(char **argv, line_t **envp);
\fb int runchildproc(char **process, int time, char *context, line_t **env);
\fb int run_command(char **list, char *context, line_t **env);
\fb int run_multiprocess(char **list, char *context, line_t **env);

.B BUILT IN FUNCTIONS

\fb int _cd(char *path, line_t **envp);
\fb int check_builtin(char *command, char **args, line_t **envp);
\fb int parse_alias(char **args, line_t **envp);
\fb int from_backup_to_conf(char **argv, line_t **envp, size_t match);
\fb int print_alias(line_t **envp);
\fb int print_alias_match(char **argv, line_t **envp, char *match);
\fb int rd_assgn(char **argv, char *comp_line);

.SH DESCRIPTION
.B simple_shell
is a sh-compatible command language interpreter that executes commands and read
from the standard input or from a file.
.SH OPTIONS
.B In addition to the single-character shell options documented in the
description of the set builtin command, simple_shell interprets no options.
.SH ARGUMENTS
.B If arguments remain after option processing, and neither the -c or the -s
option has been supplied, the first argument is assumed to be the name of a file
containing simple_shell commands. If simple_shell is invoked in this fashion, $0
is set to the name of the file, and the positional parameters are set to the
remaining arguments. Simple_shell reads and executes commands from this file,
then exits. Simple_shell's exit status is the exit status of the last command
executed in the script. If no commands are executed, the exit status is 0. An
attempt is first made to open the file in the current directory, and, if no file
is found, then simple_shell searches the directories in PATH for the script.
.SH SEE ALSO

\fB Sh(1)

.SH AUTHOR

    Mauricio Drada Dávila
    @drada_mauricio

    Daniel Rodríguez Castillo
    @Danucas1